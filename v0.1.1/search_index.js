var documenterSearchIndex = {"docs":
[{"location":"#Separating-Hyperplanes","page":"Home","title":"Separating Hyperplanes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SeparatingHyperplanes.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Mathematical details can be found in Convex Optimization by Boyd and Vandenberghe, Section 8.6.1. Eventually, I intend to add in further functionality, e.g., a soft separating hyperplane. ","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using SeparatingHyperplanes\n\n# create two 2D pointclouds\nP = rand(10, 2) \nQ = 1.0 * ones(20, 2) + rand(20, 2)\n\n# find a separating hyperplane\nresult = separating_hyperplane(P, Q)\n\n# get the status\nstatus = result.status","category":"page"},{"location":"","page":"Home","title":"Home","text":"# get the hyperplane\na, b = result.a, result.b","category":"page"},{"location":"","page":"Home","title":"Home","text":"# get the separating distance\nd = result.separating_distance","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can now plot the results (for 2D):","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Plots\n\n# Plots the hyerplane a' x = b\nfunction plot_hyperplane!(a, b; tlims = (-1, 1), kwargs...)\n        @assert length(a) == 2 \"this function only works in 2D\"\n        # find one point on the plane\n        x0 = (b / (a' * a)) * a\n        # find the tangential vector\n        n = [-a[2], a[1]]\n        plot!(t-> (x0 + t * n)[1], t-> (x0 + t * n)[2], tlims...; kwargs...)\nend\n\nplot()\nscatter!(P[:, 1], P[:, 2], label=\"P\")\nscatter!(Q[:, 1], Q[:, 2], label=\"Q\")\nplot_hyperplane!(a, b; tlims=(-0.5, 0.5), label=\"a'z = b\")","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"#SeparatingHyperplanes.Result","page":"Home","title":"SeparatingHyperplanes.Result","text":"Result{F}\n\nResults struct containg \n\nstatus: Symbol indicating the status of the solution\na: Vector of coefficients for the hyperplane\nb: Scalar offset for the hyperplane\nseparating_distance: Distance between the two sets of points\nosqp_result: The raw OSQP result object containing detailed solver information\n\nThis struct is used to encapsulate the results of the separating_hyperplane function.\n\nThe solver status can be one of the following:\n\n:Separable: The sets are separable with a valid hyperplane.\n:Not_separable: The sets are not separable.\n:Separable_inaccurate: The sets are separable, but the solution is inaccurate.\n:Not_separable_inaccurate: The sets are not separable, but the solution is inaccurate.\n:Max_iter_reached: The solver reached the maximum number of iterations without convergence.\n:Time_limit_reached: The solver reached the time limit without convergence.\n:Interrupted: The solver was interrupted before completion.\n:Unknown: The status is unknown or not recognized.\n\n\n\n\n\n","category":"type"},{"location":"#SeparatingHyperplanes.separating_hyperplane-Tuple{Any, Any}","page":"Home","title":"SeparatingHyperplanes.separating_hyperplane","text":"separating_hyperplane(P, Q; eps_abs=1e-10, eps_rel=1e-10, verbose=false, kwargs...)\n\nFind a separating hyperplane between two sets of points P and Q in R^d. If a separating hyperplane exists, it returns a Result object containing the hyperplane parameters and the distance between the sets.\n\nArguments:\n\nP: A matrix of points in R^d, arranged as N x d matrix\nQ: A matrix of points in R^d, arranged as N x d matrix\neps_abs: Absolute tolerance for the OSQP solver (default: 1e-10)\neps_rel: Relative tolerance for the OSQP solver (default: 1e-10)\nverbose: If true, prints solver information (default: false)\nkwargs: Additional keyword arguments for the OSQP solver\n\nReturns:\n\nA Result struct. \n\nThis solves the problem \n\nbeginalign*\n    underseta in mathbbR^d b in mathbbRoperatornameminimize quad   frac12 Vert a Vert^2\n    operatornamest quad   a^T p_i - b geq 1 quad forall p_i in P \n          a^T q_i - b leq -1 quad forall q_i in Q \nendalign*\n\nIf the sets are separable, the hyperplane slab -1 leq a^T z - b leq 1 separates the two point sets. The distance between the sets is given by 2 / norm(a).\n\n\n\n\n\n","category":"method"}]
}
